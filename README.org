* Cl-renoise

  Cl-renoise (or just renoise in Common Lisp) is a Common Lisp package to control renoise with OSC commands. It requires a working setup of cm-incudine (see [[https://github.com/brandflake11/install-cm-incudine][install-cm-incudine]] for help with installing cm-incudine). Cl-renoise could be useful when wanting to create music using common music, incudine, and renoise together. This even allows for scheduling renoise, using Common Lisp to "puppeteer" renoise. 

  Using cl-renoise, one can control renoise with simple instructions:

  #+BEGIN_SRC lisp
    (in-package :cm)
    (use-package :renoise)
    ;; Set some initial parameters for renoise's transport
    (renoise :tempo 180)
    (renoise :lpb 4)
    (renoise :octave 3)

    ;; Start playing renoise
    (renoise :start)
    ;; Turn on renoise's global edit mode
    (renoise :edit 1)

    ;; Use some common music functions to send renoise some midi
    ;; Incudine is connected to renoise's midi input with jack
    (setq *tempo* 180)
    (sprout (process for i from 0 to 100
	      output (new midi :time 0
		       :keynum i
		       :amplitude (random 127)
		       :duration (rhythm 's))
	      wait (rhythm 's)))

    ;; Stop recording
    (renoise :edit 0)

    ;; Go back to the first pattern to listen to what you created
    (renoise :pattern 0)
  #+END_SRC

  This is a just a beginning example of what is possible. Maybe you've always wanted to use incudine and renoise together so you can write out music directly in renoise and synthesize algorithmic music with incudine. You can use renoise as a pattern player:

  #+BEGIN_SRC lisp
    (in-package :scratch)
    (use-package :renoise)
    ;; Play pattern 0
    (renoise :pattern 0)

    (defparameter *bloop-env* (make-envelope '(1 .3 0) '(.2 .1)))

    (dsp! bloop (freq amp dur)
      (out (* (sine freq amp 0)
	      (envelope *bloop-env* 1 dur #'free))))

    (loop for i from 0 to 20
	  do (bloop (random 10000) (/ 1 20) 4))

    ;; Play pattern 8
    (renoise :pattern 8)

    (renoise :stop)
  #+END_SRC

No longer do you have to leave your lisp environment. Simply control renoise from lisp!
  
# * Getting Started

  # Include notes on how to clone this to quicklisp and load the needed packages from a clean sbcl
  # Include implementing this with cm
  # Also include setting up renoise's osc input and think about exposing :RENOISE's *address* and *port*

* License

  Cl-renoise is licensed under the GPLv3, and I assume no responsibility for anything that happens if you use it. Use at your own risk.


  

  
